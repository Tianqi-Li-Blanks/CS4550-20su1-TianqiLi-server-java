{"version":3,"sources":["logo.svg","services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","container/CourseManagerContainer.js","services/LessonService.js","components/LessonsTabsComponent.js","container/LessonsTabsContainer.js","components/ModuleListComponent.js","services/ModuleService.js","reducers/moduleReducer.js","container/ModuleListContainer.js","services/TopicService.js","components/TopicPillComponent.js","container/TopicPillContainer.js","components/widgets/HeadingWidgetComponent.js","components/widgets/ParagraphWidgetComponent.js","components/widgets/ListWidgetComponent.js","components/widgets/YouTubeWidgetComponent.js","components/widgets/ImageWidgetComponet.js","components/WidgetListComponent.js","services/WidgetService.js","container/WidgetListContainer.js","components/CourseEditorComponent.js","components/HomeComponent.js","components/WhiteBoard.js","App.js","serviceWorker.js","reducers/lessonReducer.js","reducers/topicReducer.js","reducers/widgetReducer.js","index.js"],"names":["module","exports","course","fetch","method","body","JSON","stringify","headers","then","response","json","courseId","CourseRowComponent","state","editing","props","setEditing","setState","ok","courseService","_id","status","updateCourseTitle","newTitle","prevState","title","className","this","to","onChange","event","target","value","owner","modified","onClick","deleteCourse","React","Component","CourseTableComponent","courses","map","key","CourseCardComponent","aria-hidden","CourseGridComponent","CourseManagerContainer","layout","match","params","newCourseTitle","setLayout","history","push","courseToDelete","filter","addCourse","Date","toDateString","theActualNewCourse","actualArrayOfCourses","prevProps","snapshot","id","placeholder","moduleId","newLesson","lessonId","LessonsTabsComponent","newLessonTitle","editingLesson","findLessonsForModule","lessons","lesson","e","deleteLesson","updateLesson","createLesson","LessonsTabsContainer","connect","ownProps","lessonReducer","dispatch","LessonService","actualLessons","type","ModuleListComponent","newModuleTitle","editingModule","findModuleForCourse","modules","length","deleteModule","updateModule","createModule","newModule","initialState","moduleReducer","updatedModule","console","log","ModuleListContainer","ModuleService","modulesForTheCourse","findAllModules","actualModules","newModuleData","actualNewModule","topic","topicId","TopicPillComponent","newTopicTitle","editingTopic","findTopicsForLesson","topics","deleteTopic","updateTopic","createTopic","TopicPillContainer","topicReducer","newTopic","TopicService","actualTopics","HeadingWidgetComponent","update","updateWidget","widget","name","text","size","parseInt","headingSize","delete","ParagraphWidgetComponent","order","widgetOrder","ListWidgetComponent","split","li","i","ImageWidgetComponent","url","src","alt","WidgetListComponent","newWidgetType","newWidgetName","deleteWidget","widgets","forEach","findWidgetsForTopic","undefined","createWidget","wid","tid","WidgetListContainer","widgetReducer","dispatcher","WidgetService","actualNewWidgetFromServer","widgetId","actualWidgetsFromServer","widgetsFromServer","updatedWidget","CourseEditorComponent","courseID","HomeComponent","WhiteBoard","path","exact","component","App","Boolean","window","location","hostname","action","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65f0e226.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const createCourse = (course) =>\r\n    fetch(\"https://wbdv-generic-server.herokuapp.com/api/001894939/courses\", {\r\n        method: 'POST',\r\n        body: JSON.stringify(course),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst updateCourse = (courseId, course) =>\r\n    fetch(\"https://wbdv-generic-server.herokuapp.com/api/001894939/courses/\" + courseId, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(course),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst deleteCourse = (courseId) =>\r\n    fetch(\"https://wbdv-generic-server.herokuapp.com/api/001894939/courses/\" + courseId, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst findCourseById = (courseId) => {}\r\nconst findAllCourses = () =>\r\n    fetch(\"https://wbdv-generic-server.herokuapp.com/api/001894939/courses/\")\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createCourse,\r\n    deleteCourse,\r\n    findCourseById,\r\n    findAllCourses,\r\n    updateCourse\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport courseService from '../services/CourseService'\r\n\r\nexport default class CourseRowComponent extends React.Component{\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course\r\n    }\r\n\r\n    setEditing = (editing) => this.setState({editing:editing})\r\n\r\n    ok = () =>\r\n        courseService.updateCourse(\r\n            this.state.course._id,\r\n            this.state.course)\r\n            .then(status => this.setEditing(false))\r\n\r\n    updateCourseTitle = (newTitle) =>\r\n        this.setState(prevState => ({\r\n            course: {\r\n                ...prevState.course,\r\n                title: newTitle\r\n            }\r\n        }))\r\n\r\n    render() {\r\n        return(\r\n            <tr className={this.state.editing ? 'table-primary' : ''}>\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/editor/${this.state.course._id}`}>\r\n                            <i className=\"fa fa-file-text\"/>\r\n                            {this.state.course.title}\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.updateCourseTitle(event.target.value)}\r\n                            value={this.state.course.title}/>\r\n                    }\r\n                </td>\r\n                <td className=\"d-none d-md-table-cell\">{this.state.course.owner}</td>\r\n                <td className=\"d-none d-lg-table-cell\">{this.state.course.modified}</td>\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <button\r\n                            className=\"float-right btn btn-success\"\r\n                            onClick={() => this.setEditing(true)}>\r\n                            <i className=\"fa fa-pencil\"/>\r\n                        </button>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <span className=\"float-right\">\r\n                            <button className=\" btn btn-success\"\r\n                                onClick={this.ok}>\r\n                                <i className=\"fa fa-check-square\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={\r\n                                    () => this.props.deleteCourse(this.props.course)}>\r\n                            <i className=\"fa fa-trash\"/>\r\n                        </button>\r\n                        </span>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport CourseRowComponent from \"./CourseRowComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class CourseTableComponent extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr className=\"bg-light\">\r\n                        <th>Title</th>\r\n                        <th className=\"d-none d-md-table-cell\">Owner</th>\r\n                        <th className=\"d-none d-lg-table-cell\">Last Modified</th>\r\n                        <th >\r\n                            <span className=\"float-right\">\r\n                                <Link to='/grid/courses' className=\"btn\">\r\n                                    <i className=\"fa fa-th\"/>\r\n                                </Link>\r\n                                <i className=\"fa fa-sort-alpha-asc btn\" />\r\n                            </span>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.props.courses.map(course =>\r\n                         <CourseRowComponent\r\n                             deleteCourse={this.props.deleteCourse}\r\n                             key = {course._id}\r\n                             course = {course}/>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport courseService from '../services/CourseService'\r\n\r\nexport default class CourseCardComponent extends React.Component{\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course\r\n    }\r\n\r\n    setEditing = (editing) => this.setState({editing:editing})\r\n\r\n    ok = () =>\r\n        courseService.updateCourse(\r\n            this.state.course._id,\r\n            this.state.course)\r\n            .then(status => this.setEditing(false))\r\n\r\n    updateCourseTitle = (newTitle) =>\r\n        this.setState(prevState => ({\r\n            course: {\r\n                ...prevState.course,\r\n                title: newTitle\r\n            }\r\n        }))\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"col mb-4\">\r\n                <div className=\"card\">\r\n                    <div className={this.state.editing ? 'card text-white bg-primary' : ''}>\r\n                        <div className=\"card-body\">\r\n                            <Link to={`/editor/${this.state.course._id}`} className={this.state.editing ? 'text-white' : ''}>\r\n                                <i className=\"fa-3x fa fa-file-text\" />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <small className=\"text-muted\">\r\n                                {!this.state.editing &&\r\n                                 <h4>{this.state.course.title}</h4>\r\n                                }\r\n                                {\r\n                                    this.state.editing &&\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        onChange={(event) => this.updateCourseTitle(event.target.value)}\r\n                                        value={this.state.course.title}/>\r\n                                }\r\n                                {\r\n                                    !this.state.editing &&\r\n                                    <button\r\n                                        className=\"float-right btn btn-success\"\r\n                                        onClick={() => this.setEditing(true)}>\r\n                                        <i className=\"fa fa-pencil\"/>\r\n                                    </button>\r\n                                }\r\n                                {\r\n                                    this.state.editing &&\r\n                                    <span className=\"float-right\">\r\n                                        <button className=\" btn btn-success\"\r\n                                                onClick={this.ok}>\r\n                                        <i className=\"fa fa-check-square\" />\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={\r\n                                                () => this.props.deleteCourse(this.props.course)}>\r\n                                            <i className=\"fa fa-trash\"/>\r\n                                        </button>\r\n                                    </span>\r\n                                }\r\n                                <br/>\r\n                                <br/>\r\n                                <div className={this.state.editing ? 'text-white' : ''}>\r\n                                    <Link to='/editor' className={this.state.editing ? 'text-white' : ''}>\r\n                                        <i className=\"fa fa-file-text-o\" aria-hidden=\"true\"/>\r\n                                    </Link> Modified {this.state.course.modified} by {this.state.course.owner}\r\n                                </div>\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CourseCardComponent from \"./CourseCardComponent\";\r\n\r\nexport default class CourseGridComponent extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <button className=\"navbar-toggler\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" >\r\n                        <h6 className=\"navbar-brand\">Recent documents</h6>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\" >\r\n                        <h6 className=\"navbar-brand\">Owner by me</h6>\r\n                    </div>\r\n                    <span className=\"float-right\">\r\n                        <Link to='/table/courses' className=\"btn\">\r\n                            <i className=\"fa fa-list\"/>\r\n                        </Link>\r\n                        <i className=\"fa fa-sort-alpha-asc btn\" />\r\n                        <i className=\"fa fa-folder\" />\r\n                    </span>\r\n                </nav>\r\n                    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\r\n                        {\r\n                            this.props.courses.map(course =>\r\n                                  <CourseCardComponent\r\n                                      deleteCourse={this.props.deleteCourse}\r\n                                      key = {course._id}\r\n                                      course = {course}/>\r\n                            )}\r\n                    </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport CourseTableComponent from \"../components/CourseTableComponent\";\r\nimport CourseGridComponent from \"../components/CourseGridComponent\";\r\nimport courseService from \"../services/CourseService\"\r\n\r\nclass CourseManagerContainer extends React.Component {\r\n    state = {\r\n        layout: this.props.match.params.layout,\r\n        courses: [],\r\n        newCourseTitle: 'New Course'\r\n    }\r\n\r\n    componentDidMount() {\r\n        courseService.findAllCourses()\r\n            .then(actualArrayOfCourses =>\r\n                      this.setState({courses:actualArrayOfCourses\r\n                      }))\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.match.params.layout !== this.props.match.params.layout) {\r\n            this.setState({\r\n                              layout: this.props.match.params.layout\r\n                          })\r\n        }\r\n    }\r\n\r\n    setLayout = (layout) => {\r\n        this.props.history.push(`/${layout}/courses`)\r\n    }\r\n\r\n\r\n    deleteCourse = (courseToDelete) =>\r\n        courseService.deleteCourse(courseToDelete._id)\r\n            .then(status => this.setState(prevState => ({\r\n                courses: prevState\r\n                    .courses.filter(course => course !== courseToDelete)\r\n            })))\r\n\r\n\r\n    addCourse = (title) =>\r\n        courseService.createCourse({\r\n\r\n               title: title,\r\n               owner: 'me',\r\n               modified: (new Date()).toDateString()\r\n        })\r\n            .then(theActualNewCourse =>\r\n                      this.setState((prevState) => {\r\n                          return {\r\n                              courses: [\r\n                                  ...prevState.courses,\r\n                                  theActualNewCourse\r\n                              ]\r\n                          }\r\n                      }))\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <button className=\"navbar-toggler\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <h2 className=\"navbar-brand\">Course Manager</h2>\r\n                    </div>\r\n\r\n                    <input className=\"mr-sm-2\"\r\n                        onChange={\r\n                            (event)=> this.setState(\r\n                                {newCourseTitle: event.target.value}\r\n                                )\r\n                        }\r\n                        value={this.state.newCourseTitle}\r\n                        placeholder=\"New Course\"/>\r\n                    <button className=\"btn btn-success\"\r\n                        onClick={() => this.addCourse(this.state.newCourseTitle)}>\r\n                        Add\r\n                    </button>\r\n\r\n\r\n                </nav>\r\n\r\n                {\r\n                    this.state.layout === 'table' &&\r\n                    <div>\r\n                        <button className=\"btn\"\r\n                            onClick={() => this.setLayout('grid')}>\r\n                            <i className=\"fa-2x fa fa-th\"/>\r\n                        </button>\r\n                        <CourseTableComponent\r\n                            deleteCourse = {this.deleteCourse}\r\n                            courses={this.state.courses}\r\n\r\n                        />\r\n                    </div>}\r\n\r\n                {\r\n                    this.state.layout === 'grid' &&\r\n                    <div>\r\n                        <button className=\"btn\"\r\n                            onClick={() => this.setLayout('table')}>\r\n                            <i className=\"fa-2x fa fa-list\"/>\r\n                        </button>\r\n                        <CourseGridComponent\r\n                            deleteCourse = {this.deleteCourse}\r\n                            courses={this.state.courses}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseManagerContainer","const findLessonsForModule = (moduleId) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001894939/modules/${moduleId}/lessons/`)\r\n        .then(response => response.json())\r\n\r\nconst createLesson = (moduleId, newLesson) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001894939/modules/${moduleId}/lessons/`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newLesson),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst deleteLesson = (lessonId) => {\r\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/001894939/lessons/` + lessonId, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nconst updateLesson = (lessonId, newLesson) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001894939/lessons/${lessonId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newLesson),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findLessonsForModule,\r\n    createLesson,\r\n    deleteLesson,\r\n    updateLesson\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass LessonsTabsComponent extends React.Component {\r\n    state = {\r\n        newLessonTitle: 'some other Lessons',\r\n        editingLesson: {}\r\n    }\r\n    componentDidMount() {\r\n        this.props.findLessonsForModule(this.props.params.moduleId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.params.moduleId !== this.props.params.moduleId) {\r\n            this.props.findLessonsForModule(this.props.params.moduleId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>Lesson Tabs {this.props.params.moduleId} </h3>\r\n                <ul className=\"list-group list-group-horizontal-md\">\r\n                    {this.props.lessons.map(lesson =>\r\n                             <li className={this.state.editingLesson._id === lesson._id ?\r\n                                            'list-group-item list-group-item-primary' :\r\n                                            'list-group-item'}\r\n                                 key={lesson._id}>\r\n                                 {this.state.editingLesson._id === lesson._id &&\r\n                                  <span>\r\n                                      <input onChange={(e) => {\r\n                                          const newTitle = e.target.value\r\n                                          this.setState(prevState => ({\r\n                                              editingLesson: {\r\n                                                  ...prevState.editingLesson,\r\n                                                  title: newTitle\r\n                                              }\r\n                                          }))\r\n                                      }} value={this.state.editingLesson.title}/>\r\n                                      <span className=\"float-right\">\r\n                                          <button\r\n                                              onClick={() => this.props.deleteLesson(lesson._id)}>\r\n                                              <i className=\"fa fa-trash\"/>\r\n                                          </button>\r\n                                          <button onClick={() => {\r\n                                              this.props.updateLesson(\r\n                                                  this.state.editingLesson._id,\r\n                                                  this.state.editingLesson)\r\n                                              this.setState({editingLesson: {}})}}>\r\n                                              <i className=\"fa fa-check-square\" />\r\n                                          </button>\r\n                                      </span>\r\n                                  </span>\r\n                                 }\r\n                                 {this.state.editingLesson._id !== lesson._id &&\r\n                                  <span>\r\n                                      <Link to={`/editor/${this.props.params.courseId}/modules/${this.props.params.moduleId}/lessons/${lesson._id}`}>\r\n                                           {lesson.title}\r\n                                       </Link>\r\n                                      <button className=\"float-right\" onClick={() =>\r\n                                          this.setState({editingLesson: lesson})}>\r\n                                          <i className=\"fa fa-pencil\"/>\r\n                                      </button>\r\n                                  </span>\r\n                                 }\r\n                             </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <span>\r\n                    <input onChange={(event) =>\r\n                        this.setState({newLessonTitle: event.target.value})}\r\n                           value={this.state.newLessonTitle}/>\r\n                    <button className=\"btn btn-secondary my-2 mr-sm-0\"\r\n                            onClick={() => this.props.createLesson(\r\n                                this.props.params.moduleId, {title: this.state.newLessonTitle})}>\r\n                        <i className=\"fa fa-plus\"/>\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonsTabsComponent\r\n\r\n// TODO: move mappers, connectors to separate container file like we did for module\r\n\r\n","import {connect} from \"react-redux\";\r\nimport LessonService from \"../services/LessonService\";\r\nimport LessonsTabsComponent from \"../components/LessonsTabsComponent\";\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n    return {\r\n        lessons: state.lessonReducer.lessons,\r\n        newLessonTitle: state.lessonReducer.newLessonTitle,\r\n        params: ownProps.params\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        createLesson: (moduleId, newLesson) => {\r\n            LessonService.createLesson(moduleId, newLesson)\r\n                .then(actualLessons => dispatch({type: 'CREATE_LESSON',\r\n                                                lessons: actualLessons}))\r\n        },\r\n        findLessonsForModule: (moduleId) => {\r\n            LessonService.findLessonsForModule(moduleId)\r\n                .then(actualLessons => dispatch({type: \"FIND_LESSONS_FOR_MODULE\",\r\n                                                    lessons: actualLessons}))\r\n        },\r\n        deleteLesson: (lessonId) => {\r\n            LessonService.deleteLesson(lessonId)\r\n                .then(status => dispatch({type: \"DELETE_LESSON\",\r\n                                   lessons: lessonId}))\r\n        },\r\n        updateLesson: (lessonId, newLessonTitle) => {\r\n            LessonService.updateLesson(lessonId, newLessonTitle)\r\n                .then(status => dispatch({type: 'UPDATE_LESSON',\r\n                                   updateLesson: newLessonTitle}))\r\n        },\r\n    }\r\n}\r\n\r\nconst LessonsTabsContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(LessonsTabsComponent)\r\n\r\nexport default LessonsTabsContainer\r\nexport const ewq = 1\r\nexport const rew = 2\r\nexport const tre = 3","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass ModuleListComponent extends React.Component {\n  state = {\n    newModuleTitle: 'some other module',\n    editingModule: {},\n  }\n\n  componentDidMount() {\n    // this.props.findAllModules()\n    this.props.findModuleForCourse(this.props.params.courseId)\n  }\n\n  render() {\n    return(\n        <div>\n            <h1>Modules ({this.props.modules.length})</h1>\n            ({this.props.params.courseId})\n            <ul className=\"wbdv-module-list list-group\">\n              {this.props.modules.map(module =>\n                  <li className={this.state.editingModule._id === module._id ?\n                                 'list-group-item list-group-item-primary' : 'list-group-item'}\n                      key={module._id}>\n                    {this.state.editingModule._id === module._id &&\n                        <span>\n                            <input onChange={(e) => {\n                                const newTitle = e.target.value\n                                this.setState(prevState => ({\n                                    editingModule: {\n                                        ...prevState.editingModule,\n                                      title: newTitle\n                                    }\n                                  }))\n                                }}\n                                   value={this.state.editingModule.title}/>\n                                   <span className=\"float-right\">\n                                       <button onClick={() => this.props.deleteModule(module._id)}>\n                                          <i className=\"fa fa-trash\"/>\n                                        </button>\n                                        <button onClick={() => {\n                                            this.props.updateModule(this.state.editingModule._id,\n                                                                    this.state.editingModule)\n                                            this.setState({editingModule: {}})\n                                        }}>\n                                          <i className=\"fa fa-check-square\" />\n                                        </button>\n                                   </span>\n                        </span>\n                    }\n                    {this.state.editingModule._id !== module._id &&\n                      <span>\n                          <Link to={`/editor/${this.props.params.courseId}/modules/${module._id}`}>\n                            {module.title}\n                          </Link>\n                          <button className=\"float-right\"\n                              onClick={() => this.setState({editingModule: module})}>\n                              <i className=\"fa fa-pencil\"/>\n                          </button>\n                      </span>\n                    }\n                  </li>\n                )\n              }\n              <br/>\n              <span>\n              <input onChange={(event) =>\n                  this.setState({newModuleTitle: event.target.value})}\n                   value={this.state.newModuleTitle}/>\n              <button className=\"btn btn-secondary my-2 mr-sm-0\"\n                 onClick={() => this.props.createModule(\n                     this.props.params.courseId, {title: this.state.newModuleTitle})}>\n                 <i className=\"fa fa-plus\"/>\n              </button>\n              </span>\n            </ul>\n        </div>\n    )\n  }\n}\n\nexport default ModuleListComponent\n","const findAllModules = () => {\r\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001894939/modules\")\r\n        .then(response => response.json())\r\n}\r\n\r\nconst findModuleForCourse = (courseId) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001894939/courses/${courseId}/modules`)\r\n        .then(response => response.json())\r\n\r\n\r\nconst deleteModule = (moduleId) => {\r\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001894939/modules/\" + moduleId, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nconst updateModule = (moduleId, newModule) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001894939/modules/${moduleId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newModule),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst createModule = (courseId, module) =>\r\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001894939/courses/${courseId}/modules`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(module),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findAllModules,\r\n    deleteModule,\r\n    createModule,\r\n    updateModule,\r\n    findModuleForCourse\r\n}\r\n","// Finite State Machine\n// (S1) --e1--> (S2)\n// (S1) --e2--> (S3)\n\nconst initialState = {\n  newModuleTitle: 'Some Module',\n  modules: []\n}\n\nconst moduleReducer = (state=initialState, event) => {\n  switch (event.type) {\n    case \"UPDATE_MODULE\":\n      return {\n        ...state,\n        modules: state.modules.map(\n          module => module._id === event.updatedModule._id ?\n            event.updatedModule : module )\n      }\n    case \"FIND_MODULES_FOR_COURSE\":\n      return {\n        ...state,\n        modules: event.modules\n      }\n    case \"FIND_ALL_MODULES\":\n      console.log(event.modules)\n      return {\n        ...state,\n        modules: event.modules\n      }\n      break\n    case \"ADD_MODULE\":\n      return {\n        modules: [\n          ...state.modules,\n          event.newModule\n        ]\n      }\n      break\n    case \"DELETE_MODULE\":\n      return {\n        modules: state.modules.filter(module => module._id !== event.moduleId)\n      }\n      break\n    default:\n      return state\n  }\n}\n\nexport default moduleReducer\n","import {connect} from \"react-redux\";\r\nimport ModuleListComponent from \"../components/ModuleListComponent\";\r\nimport ModuleService from \"../services/ModuleService\";\r\nimport moduleReducer from \"../reducers/moduleReducer\";\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n    return {\r\n        modules: state.moduleReducer.modules,\r\n        newModuleTitle: state.moduleReducer.newModuleTitle,\r\n        params: ownProps.params\r\n        // ownProps: ownProps\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        findModuleForCourse: (courseId) => {\r\n            ModuleService.findModuleForCourse(courseId)\r\n                .then(modulesForTheCourse => dispatch({type: 'FIND_MODULES_FOR_COURSE',\r\n                                                          modules: modulesForTheCourse}))\r\n        },\r\n        findAllModules: () => {\r\n            ModuleService.findAllModules()\r\n                .then(actualModules => dispatch({type: 'FIND_ALL_MODULES',\r\n                                                    modules: actualModules}))\r\n        },\r\n        updateModule: (moduleId, newModuleData) => {\r\n            ModuleService.updateModule(moduleId, newModuleData)\r\n                .then(status => dispatch({type: 'UPDATE_MODULE',\r\n                                             updatedModule: newModuleData}))\r\n        },\r\n        createModule: (courseId, newModule) => {\r\n            ModuleService.createModule(courseId, newModule)\r\n                .then(actualNewModule => dispatch({type: \"ADD_MODULE\",\r\n                                                      newModule: actualNewModule}))\r\n        },\r\n        deleteModule: (moduleId) => {\r\n            ModuleService.deleteModule(moduleId)\r\n                .then(status => dispatch({type: \"DELETE_MODULE\",\r\n                                             moduleId: moduleId}))\r\n        }\r\n    }\r\n}\r\n\r\nconst ModuleListContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(ModuleListComponent)\r\n\r\nexport default ModuleListContainer\r\n\r\n","const findTopicsForLesson = (lessonId) =>\r\n    fetch(`https://git.heroku.com/frozen-depths-95944.git/api/lessons/${lessonId}/topics/`)\r\n        .then(response => response.json())\r\n\r\n\r\nconst deleteTopic = (topicId) => {\r\n    return fetch(\"https://git.heroku.com/frozen-depths-95944.git/api/topics/\" + topicId, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nconst updateTopic = (topicId, topic) =>\r\n    fetch(`https://git.heroku.com/frozen-depths-95944.git/api/topics/${topicId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst createTopic = (lessonId, topic) =>\r\n    fetch(`https://git.heroku.com/frozen-depths-95944.git/api/lessons/${lessonId}/topics/`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    createTopic,\r\n    updateTopic,\r\n    deleteTopic,\r\n    findTopicsForLesson\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopicPillComponent extends React.Component {\r\n    state = {\r\n        newTopicTitle: 'some other topic',\r\n        editingTopic: {}\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.params.lessonId)\r\n        this.props.findTopicsForLesson(this.props.params.lessonId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.params.lessonId !== this.props.params.lessonId) {\r\n            this.props.findTopicsForLesson(this.props.params.lessonId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>Topic Pills {this.props.params.lessonId}</h3>\r\n                <ul className=\"list-group list-group-horizontal-md\">\r\n                    {this.props.topics.map(\r\n                        topic =>\r\n                            <li className={this.state.editingTopic.id === topic.id ?\r\n                                           'list-group-item list-group-item-primary' :\r\n                                           'list-group-item'}\r\n                                key={topic.id}>\r\n                                {this.state.editingTopic.id === topic.id &&\r\n                                 <span>\r\n                                     <input onChange={(e) => {\r\n                                         const newTitle = e.target.value\r\n                                         this.setState(prevState => ({\r\n                                             editingTopic: {\r\n                                                 ...prevState.editingTopic,\r\n                                                 title: newTitle\r\n                                             }\r\n                                         }))\r\n                                     }} value={this.state.editingTopic.title}/>\r\n                                     <span className=\"float-right\">\r\n                                         <button\r\n                                             onClick={() => this.props.deleteTopic(topic.id)}>\r\n                                         <i className=\"fa fa-trash\"/>\r\n                                         </button>\r\n                                         <button onClick={() => {\r\n                                             this.props.updateTopic(\r\n                                                 this.state.editingTopic.id,\r\n                                                 this.state.editingTopic)\r\n                                             this.setState({editingTopic: {}})}}>\r\n                                             <i className=\"fa fa-check-square\" />\r\n                                         </button>\r\n                                     </span>\r\n                                 </span>\r\n                                }\r\n                                {this.state.editingTopic.id !== topic.id &&\r\n                                 <span>\r\n                                     <Link to={`/editor/${this.props.params.courseId}/modules/${this.props.params.moduleId}/lessons/${this.props.params.lessonId}/topics/${topic.id}`}>\r\n                                           {topic.title}\r\n                                     </Link>\r\n                                     <button className=\"float-right\"\r\n                                         onClick={() => this.setState({editingTopic: topic})}>\r\n                                         <i className=\"fa fa-pencil\"/>\r\n                                     </button>\r\n                                 </span>\r\n                                }\r\n                            </li>)\r\n                    }\r\n                </ul>\r\n                <span>\r\n                    <input onChange={(event) =>\r\n                        this.setState({newTopicTitle: event.target.value})}\r\n                           value={this.state.newTopicTitle}/>\r\n                    <button className=\"btn btn-secondary my-2 mr-sm-0\"\r\n                            onClick={() => this.props.createTopic(\r\n                                this.props.params.lessonId, {title: this.state.newTopicTitle})}>\r\n                        <i className=\"fa fa-plus\"/>\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopicPillComponent\r\n\r\n","import {connect} from \"react-redux\";\r\nimport TopicService from \"../services/TopicService\";\r\nimport TopicPillComponent from \"../components/TopicPillComponent\";\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n    return {\r\n        topics: state.topicReducer.topics,\r\n        newTopicTitle: state.topicReducer.newTopicTitle,\r\n        params: ownProps.params\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        createTopic: (lessonId, newTopic) => {\r\n            TopicService.createTopic(lessonId, newTopic)\r\n                .then(newTopic => dispatch({type: 'CREATE_TOPIC',\r\n                                               topics: newTopic}))\r\n        },\r\n        findTopicsForLesson: (lessonId) => {\r\n            TopicService.findTopicsForLesson(lessonId)\r\n                .then(actualTopics => dispatch({type: \"FIND_TOPICS_FOR_LESSON\",\r\n                                                   topics: actualTopics}))\r\n        },\r\n        deleteTopic: (topicId) => {\r\n            TopicService.deleteTopic(topicId)\r\n                .then(dispatch({type: \"DELETE_TOPIC\",\r\n                                   topics: topicId}))\r\n        },\r\n        updateTopic: (topicId, newTopicTitle) => {\r\n            TopicService.updateTopic(topicId, newTopicTitle)\r\n                .then(dispatch({type: 'UPDATE_TOPIC',\r\n                                   updateTopic: newTopicTitle}))\r\n        },\r\n    }\r\n}\r\n\r\nconst TopicPillContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(TopicPillComponent)\r\n\r\nexport default TopicPillContainer\r\nexport const ewq = 1\r\nexport const rew = 2\r\nexport const tre = 3","import React from \"react\";\n\nexport default class HeadingWidgetComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false,\n            type: 'HEADING',\n            text: '',\n            name: '',\n            size: this.props.widget.size,\n            headingSize: \"h1\"\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n                          name: this.props.widget.name,\n                          type: this.props.widget.type,\n                          text: this.props.widget.text,\n                          size: this.props.widget.size,\n                      })\n    }\n\n    update = () => {\n        this.props.updateWidget(this.props.widget.id,\n                                {...this.props.widget,\n                                    name: this.state.name,\n                                    type: this.state.type,\n                                    text: this.state.text,\n                                    size: parseInt(this.state.headingSize)});\n    };\n\n\n    render() {\n        return <div>\n            <div className={'form-row'}>\n                <h3>Heading Widget</h3>\n                {this.state.editing &&\n                 <span>\n                     <select value={this.state.size}\n                                 onChange={(e) => this.setState({size: parseInt(e.target.value)})}>\n                        <option value=\"1\">Heading 1</option>\n                        <option value=\"2\">Heading 2</option>\n                        <option value=\"3\">Heading 3</option>\n                        <option value=\"4\">Heading 4</option>\n                        <option value=\"5\">Heading 5</option>\n                        <option value=\"6\">Heading 6</option>\n                    </select>\n                     <button className={'btn btn-warning'}>\n                         <i className=\"fa fa-arrow-up\"/>\n                     </button>\n                     <button className={'btn btn-warning'}>\n                         <i className=\"fa fa-arrow-down\"/>\n                     </button>\n                     <button className={'btn btn-primary'}\n                             onClick={() => {\n                                 this.update();\n                                 this.setState({editing: false})\n                             }}>\n                        <i className=\"fa fa-check\"/>\n                    </button>\n                    <button className={'btn btn-danger'}\n                            onClick={() => this.props.delete(this.props.widget)}>\n                        <i className=\"fa fa-trash\"/>\n                    </button>\n                </span>}\n                {!this.state.editing &&\n                     <span className='float-right'>\n                         <button className={'btn btn-success'}\n                                 onClick={() => this.setState({editing: true})}>\n                             <i className=\"fa fa-pencil\"/>\n                         </button>\n                     </span>\n                }\n            </div>\n\n            {!this.state.editing &&\n             <div>\n                 {this.state.size === 1 && <h1>{this.props.widget.name}</h1>}\n                 {this.state.size === 2 && <h2>{this.props.widget.name}</h2>}\n                 {this.state.size === 3 && <h3>{this.props.widget.name}</h3>}\n                 {this.state.size === 4 && <h4>{this.props.widget.name}</h4>}\n                 {this.state.size === 5 && <h5>{this.props.widget.name}</h5>}\n                 {this.state.size === 6 && <h6>{this.props.widget.name}</h6>}\n                 <p>{this.props.widget.text}</p>\n             </div>}\n\n            {this.state.editing &&\n             <form>\n                 <div className={'form-group row'}>\n                     <h3 className=\"col-md-2 col-form-label\">\n                         Text:\n                     </h3>\n                     <div className={'col-md-10'}>\n                        <textarea value={this.state.text}\n                                  placeholder=\"Paragraph text\"\n                                  className=\"form-control\"\n                                  onChange={(e) => this.setState({text: e.target.value})}/>\n                     </div>\n                 </div>\n                 <div className={'form-group row'}>\n                     <h3 className=\"col-md-2 col-form-label\">\n                         Widget Name:\n                     </h3>\n                     <div className={'col-md-10'}>\n                         <input value={this.state.name}\n                                placeholder=\"Widget Name\"\n                                className=\"form-control\"\n                                onChange={(e) => this.setState({name: e.target.value})}/>\n                     </div>\n                 </div>\n\n                 <div className={'form-group row'}>\n                     <h3 className=\"col-md-2 col-form-label\">\n                         Widget Type:\n                     </h3>\n                     <div className={'col-md-10'}>\n                         <select className=\"form-control\"\n                                 value={this.state.type}\n                                 onChange={(e) => this.setState({type: e.target.value})}>\n                             <option value='HEADING'>Heading</option>\n                             <option value='PARAGRAPH'>Paragraph</option>\n                             <option value='LIST'>List</option>\n                             <option value='IMAGE'>Image</option>\n                         </select>\n                     </div>\n                 </div>\n\n             </form>}\n        </div>\n    }\n}","import React from \"react\";\n\nexport default class ParagraphWidgetComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            type: 'PARAGRAPH',\n            name: '',\n            editing: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n                          text: this.props.widget.text,\n                          name: this.props.widget.name,\n                          order: this.props.widget.widgetOrder,\n                          type: this.props.widget.type\n                      })\n    }\n\n    update = () =>\n        this.props.updateWidget(this.props.widget.id,\n                                {\n                                    ...this.props.widget,\n                                    name: this.state.name,\n                                    type: this.state.type,\n                                    text: this.state.text\n                                });\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h3>Paragraph Widget</h3>\n                    {this.state.editing &&\n                     <span className='float-right'>\n                             <button className=\"btn btn-warning\">\n                                 <i className=\"fa fa-arrow-up\"/>\n                             </button>\n                             <button className=\"btn btn-warning\">\n                                 <i className=\"fa fa-arrow-down\"/>\n                             </button>\n\n                         <button className=\"btn btn-primary\"\n                                 onClick={() => {\n                                     this.update();\n                                     this.setState({editing: false})\n                                 }}>\n                            <i className=\"fa fa-check\"/>\n                        </button>\n                         <button className=\"btn btn-danger\"\n                                 onClick={() => this.props.delete(this.props.widget)}>\n                               <i className=\"fa fa-trash\"/>\n                         </button>\n                    </span>\n                    }\n                    {!this.state.editing &&\n                     <span className='float-right'>\n                         <button className=\"btn btn-success\"\n                                 onClick={() => this.setState({editing: true})}>\n                             <i className=\"fa fa-pencil\"/>\n                         </button>\n                     </span>\n                    }\n                </div>\n                {!this.state.editing &&\n                 <div>\n                     <h4>\n                         {this.props.widget.name}\n                     </h4>\n                     <p>\n                         {this.props.widget.text}\n                     </p>\n                 </div>}\n                {this.state.editing &&\n                 <form>\n                     <div className={'form-group row'}>\n                         <h3 className=\"col-md-2 col-form-label\">\n                             Text:\n                         </h3>\n                         <div className={'col-md-10'}>\n                            <textarea value={this.state.text}\n                                      placeholder=\"Paragraph text\"\n                                      className=\"form-control\"\n                                      onChange={(e) => this.setState({text: e.target.value})}/>\n                         </div>\n                     </div>\n\n                     <div className={'form-group row'}>\n                         <h3 className=\"col-md-2 col-form-label\">\n                             Widget Name:\n                         </h3>\n                         <div className={'col-md-10'}>\n                             <input value={this.state.name}\n                                    placeholder=\"Widget Name\"\n                                    className=\"form-control\"\n                                    onChange={(e) => this.setState({name: e.target.value})}/>\n                         </div>\n                     </div>\n\n                     <div className={'form-group row'}>\n                         <h3 className=\"col-md-2 col-form-label\">\n                             Widget Type:\n                         </h3>\n                         <div className={'col-md-10'}>\n                             <select className=\"form-control\"\n                                     value={this.state.type}\n                                     onChange={(e) => this.setState({type: e.target.value})}>\n                                 <option value='HEADING'>Heading</option>\n                                 <option value='PARAGRAPH'>Paragraph</option>\n                                 <option value='LIST'>List</option>\n                                 <option value='IMAGE'>Image</option>\n                             </select>\n                         </div>\n                     </div>\n                 </form>}\n            </div>\n        )\n    }\n}","import React from \"react\";\r\n\r\nexport default class ListWidgetComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            text: '',\r\n            name: '',\r\n            type: 'LIST',\r\n            value: 'false'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n                          text: this.props.widget.text,\r\n                          name: this.props.widget.name,\r\n                          type: this.props.widget.type,\r\n                          value: this.props.widget.value\r\n                      })\r\n    }\r\n\r\n    update = () =>\r\n        this.props.updateWidget(this.props.widget.id,\r\n                                {\r\n                                    ...this.props.widget,\r\n                                    name: this.state.name,\r\n                                    type: this.state.type,\r\n                                    text: this.state.text,\r\n                                    value: this.state.value\r\n                                });\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h3>List Widget</h3>\r\n                    {this.state.editing &&\r\n                     <span className='float-right'>\r\n                         <button className=\"btn btn-warning\">\r\n                                 <i className=\"fa fa-arrow-up\"/>\r\n                             </button>\r\n                         <button className=\"btn btn-warning\">\r\n                                 <i className=\"fa fa-arrow-down\"/>\r\n                             </button>\r\n                         <button className={'btn btn-primary'}\r\n                                 onClick={() => {\r\n                                     this.update();\r\n                                     this.setState({editing: false})\r\n                                 }}>\r\n                            <i className=\"fa fa-check\"/>\r\n                        </button>\r\n                         <button className=\"btn btn-danger\"\r\n                                 onClick={() => this.props.delete(this.props.widget)}>\r\n                               <i className=\"fa fa-trash\"/>\r\n                         </button>\r\n                    </span>\r\n                    }\r\n\r\n\r\n                    {!this.state.editing &&\r\n                     <span className=\"float-right\">\r\n                         <button className=\"btn btn-success\"\r\n                                 onClick={() => this.setState({editing: true})}>\r\n                             <i className=\"fa fa-pencil\"/>\r\n                         </button>\r\n                     </span>\r\n                    }\r\n\r\n                </div>\r\n                {!this.state.editing &&\r\n                 <div>\r\n                     <h4>\r\n                         {this.props.widget.name}\r\n                     </h4>\r\n                     <div> {this.state.value === 'true' &&\r\n                            <ol>\r\n                                {this.state.text.split('\\n')\r\n                                    .map((li, i) =>\r\n                                             <li key={i}>\r\n                                                 {li}\r\n                                             </li>\r\n                                    )}\r\n                            </ol>}\r\n                         {this.state.value === 'false' &&\r\n                          <ul>\r\n                              {this.state.text.split('\\n')\r\n                                  .map((li, i) =>\r\n                                           <li key={i}>\r\n                                               {li}\r\n                                           </li>\r\n                                  )}\r\n                          </ul>}\r\n                     </div>\r\n                 </div>}\r\n                {this.state.editing &&\r\n                 <form>\r\n                     <div className=\"form-group row\">\r\n                         <h3 className=\"col-md-2 col-form-label\">\r\n                             Text:\r\n                         </h3>\r\n                         <div className={'col-md-10'}>\r\n                            <textarea value={this.state.text}\r\n                                      className=\"form-control\"\r\n                                      placeholder=\"Text\"\r\n                                      onChange={(e) => this.setState({text: e.target.value})}/>\r\n                         </div>\r\n                     </div>\r\n\r\n                     <div className=\"form-group row\">\r\n                         <h3 className=\"col-md-2 col-form-label\">\r\n                             Widget Name:\r\n                         </h3>\r\n                         <div className={'col-md-10'}>\r\n                             <input value={this.state.name}\r\n                                    placeholder=\"Widget Name\"\r\n                                    className=\"form-control\"\r\n                                    onChange={(e) => this.setState({name: e.target.value})}/>\r\n                         </div>\r\n                     </div>\r\n\r\n                     <div className={'form-group row'}>\r\n                         <h3 className=\"col-md-2 col-form-label\">\r\n                             Widget Type:\r\n                         </h3>\r\n                         <div className={'col-md-10'}>\r\n                             <select className=\"form-control\"\r\n                                     value={this.state.type}\r\n                                     onChange={(e) => this.setState({type: e.target.value})}>\r\n                                 <option value='IMAGE'>Image</option>\r\n                                 <option value='LIST'>List</option>\r\n                                 <option value='HEADING'>Heading</option>\r\n                                 <option value='PARAGRAPH'>Paragraph</option>\r\n                             </select>\r\n                         </div>\r\n                     </div>\r\n\r\n                     <div className={'form-group row'}>\r\n                         <h3 className=\"col-md-2 col-form-label\">\r\n                             List Type:\r\n                         </h3>\r\n                         <div className={'col-md-10'}>\r\n                             <select className=\"form-control\"\r\n                                     value={this.state.value}\r\n                                     onChange={(e) => this.setState({value: e.target.value})}>\r\n                                 <option value='true'>Ordered List</option>\r\n                                 <option value='false'>Unordered List</option>\r\n                             </select>\r\n                         </div>\r\n                     </div>\r\n                 </form>}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\n\nexport default class YouTubeWidgetComponent extends React.Component {\n  render() {\n    return(\n      <div>\n        <h3>YouTube Widget</h3>\n        {this.props.widget.name}\n      </div>\n    )\n  }\n}\n","import React from \"react\";\r\n\r\nexport default class ImageWidgetComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            name: '',\r\n            type: 'IMAGE',\r\n            url: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n                          url: this.props.widget.url,\r\n                          order: this.props.widget.widgetOrder,\r\n                          name: this.props.widget.name,\r\n                          type: this.props.widget.type,\r\n                      })\r\n    }\r\n\r\n    update = () => {\r\n        this.props.updateWidget(this.props.widget.id,\r\n                                {\r\n                                    ...this.props.widget,\r\n                                    url: this.state.url,\r\n                                    name: this.state.name,\r\n                                    type: this.state.type,\r\n                                });\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <div className=\"form-row\">\r\n                <h3>Image Widget</h3>\r\n                {this.state.editing &&\r\n                 <span>\r\n                     <button className={'btn btn-warning'}>\r\n                             <i className=\"fa fa-arrow-up\"/>\r\n                     </button>\r\n                     <button className={'btn btn-warning'}>\r\n                             <i className=\"fa fa-arrow-down\"/>\r\n                         </button>\r\n                     <button className={'btn btn-primary'}\r\n                             onClick={() => {\r\n                                 this.update();\r\n                                 this.setState({editing: false})\r\n                             }}>\r\n                        <i className=\"fa fa-check\"/>\r\n                    </button>\r\n                    <button className={'btn btn-danger'}\r\n                            onClick={() => this.props.delete(this.props.widget)}>\r\n                        <i className=\"fa fa-trash\"/>\r\n                    </button>\r\n                </span>}\r\n\r\n                {!this.state.editing &&\r\n                 <span className='float-right'>\r\n                     <button className={'btn btn-success'}\r\n                             onClick={() => this.setState({editing: true})}>\r\n                         <i className=\"fa fa-pencil\"/>\r\n                     </button>\r\n                 </span>}\r\n\r\n            </div>\r\n\r\n            {!this.state.editing &&\r\n             <img src={this.props.widget.url} alt={this.props.widget.name}/>\r\n            }\r\n\r\n            {this.state.editing &&\r\n             <form>\r\n                 <div className={'form-group row'}>\r\n                     <h3 className=\"col-md-2 col-form-label\">\r\n                         Url:\r\n                     </h3>\r\n                     <div className=\"col-md-10\">\r\n                        <textarea value={this.state.url}\r\n                                  placeholder=\"Url\"\r\n                                  className=\"form-control\"\r\n                                  onChange={(e) => this.setState({url: e.target.value})}/>\r\n                     </div>\r\n                 </div>\r\n                 <div className=\"form-group row\">\r\n                     <h3 className=\"col-md-2 col-form-label\">\r\n                         Widget Name:\r\n                     </h3>\r\n                     <div className={'col-md-10'}>\r\n                         <input value={this.state.name}\r\n                                placeholder=\"Widget Name\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => this.setState({name: e.target.value})}/>\r\n                     </div>\r\n                 </div>\r\n\r\n                 <div className=\"form-group row\">\r\n                     <h3 className=\"col-md-2 col-form-label\">\r\n                         Widget Type:\r\n                     </h3>\r\n                     <div className={'col-md-10'}>\r\n                         <select className=\"form-control\"\r\n                                 value={this.state.type}\r\n                                 onChange={(e) => this.setState({type: e.target.value})}>\r\n                             <option value='HEADING'>Heading</option>\r\n                             <option value='PARAGRAPH'>Paragraph</option>\r\n                             <option value='IMAGE'>Image</option>\r\n                             <option value='LIST'>List</option>\r\n                         </select>\r\n                     </div>\r\n                 </div>\r\n\r\n             </form>}\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport HeadingWidgetComponent from \"./widgets/HeadingWidgetComponent\";\r\nimport ParagraphWidgetComponent from \"./widgets/ParagraphWidgetComponent\";\r\nimport YouTubeWidgetComponent from \"./widgets/YouTubeWidgetComponent\";\r\nimport ListWidgetComponent from \"./widgets/ListWidgetComponent\";\r\nimport ImageWidgetComponent from \"./widgets/ImageWidgetComponet\";\r\n\r\nclass WidgetListComponent extends React.Component {\r\n    state = {\r\n        newWidgetType: 'HEADING',\r\n        newWidgetName: 'New Widget',\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.params.topicId)\r\n        this.props.findWidgetsForTopic(this.props.params.topicId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.params.topicId !== this.props.params.topicId) {\r\n            this.props.findWidgetsForTopic(this.props.params.topicId);\r\n        }\r\n    }\r\n\r\n    delete = (widget) => {\r\n        this.props.deleteWidget(widget.id);\r\n        this.props.widgets.forEach(widget => {\r\n            if (widget.widgetOrder > widget.widgetOrder) {\r\n                this.props.updateWidget(widget.id, {...widget, widgetOrder: widget.widgetOrder - 1})\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Widget List </h2>\r\n                <h2>{this.props.params.topicId}</h2>\r\n                <ul className=\"list-group\">\r\n                    {this.props.params.topicId !== undefined &&\r\n                     this.props.widgets\r\n                         .map(widget =>\r\n                                  <li key={widget.id}\r\n                                      className=\"list-group-item\">\r\n                                      {\r\n                                          widget.type === 'HEADING' &&\r\n                                          <HeadingWidgetComponent\r\n                                              widget={widget}\r\n                                              updateWidget={this.props.updateWidget}\r\n                                              delete={this.props.delete}/>\r\n                                      }\r\n                                      {\r\n                                          widget.type === 'PARAGRAPH' &&\r\n                                          <ParagraphWidgetComponent\r\n                                              widget={widget}\r\n                                              updateWidget={this.props.updateWidget}\r\n                                              delete={this.props.delete}/>\r\n                                      }\r\n                                      {\r\n                                          widget.type === 'LIST' &&\r\n                                          <ListWidgetComponent\r\n                                              widget={widget}\r\n                                              updateWidget={this.props.updateWidget}\r\n                                              delete={this.props.delete}/>\r\n                                      }\r\n                                      {\r\n                                          widget.type === 'IMAGE' &&\r\n                                          <ImageWidgetComponent\r\n                                              widget={widget}\r\n                                              updateWidget={this.props.updateWidget}\r\n                                              delete={this.props.delete}/>\r\n                                      }\r\n                                  </li>)}\r\n                </ul>\r\n                <select\r\n                    onChange={(event) =>\r\n                        this.setState({newWidgetType: event.target.value})}\r\n                    value={this.state.newWidgetType}>\r\n                    <option value=\"HEADING\">Heading</option>\r\n                    <option value=\"PARAGRAPH\">Paragraph</option>\r\n                    <option value='LIST'>List</option>\r\n                    <option value='IMAGE'>Image</option>\r\n                </select>\r\n\r\n                <button onClick={() => this.props.createWidget(\r\n                    this.props.params.topicId,\r\n                    {\r\n                        type: this.state.newWidgetType,\r\n                        name: this.state.newWidgetName,\r\n                        widgetOrder: this.props.widgets.length + 1,\r\n                        size: 1,\r\n                    }\r\n                )}>\r\n                    Create Widget\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WidgetListComponent\r\n","const findWidgetsForTopic = (tid) =>\n  fetch(`https://git.heroku.com/frozen-depths-95944.git/api/topics/${tid}/widgets`)\n    .then(response => response.json())\n\nconst deleteWidget = (wid) =>\n  fetch(`https://git.heroku.com/frozen-depths-95944.git/api/widgets/${wid}`, {\n    method: 'DELETE'\n  }).then(response => response.json())\n\nconst createWidget = (tid, widget) =>\n  fetch(`https://git.heroku.com/frozen-depths-95944.git/api/topics/${tid}/widgets`, {\n    method: 'POST',\n    body: JSON.stringify(widget),\n    headers: {\n      'content-type': 'application/json'\n    }\n  }).then(response => response.json())\n\nexport const findWidgetById = (wid) =>\n    fetch(`https://git.heroku.com/frozen-depths-95944.git/api/widgets/${wid}`)\n        .then(response => response.json());\n\nconst updateWidget = (wid, widget) =>\n    fetch(`https://git.heroku.com/frozen-depths-95944.git/api/widgets/${wid}`, {\n        method: 'PUT',\n        body: JSON.stringify(widget),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json())\n\n\nexport default {\n    updateWidget,\n    createWidget,\n    deleteWidget,\n    findWidgetById,\n    findWidgetsForTopic\n}\n","import {connect} from \"react-redux\";\r\nimport WidgetService from \"../services/WidgetService\";\r\nimport WidgetListComponent from \"../components/WidgetListComponent\";\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n    return {\r\n        widgets: state.widgetReducer.widgets,\r\n        params: ownProps.params\r\n    }\r\n};\r\n\r\nconst dispatchToPropertyMapper = (dispatcher) => {\r\n    return {\r\n        createWidget: (tid, widget) =>\r\n            WidgetService.createWidget(tid, widget)\r\n                .then(actualNewWidgetFromServer =>\r\n                          dispatcher({\r\n                                         type: \"CREATE_WIDGET\",\r\n                                         widget: actualNewWidgetFromServer\r\n                                     })\r\n                ),\r\n        deleteWidget: (wid) =>\r\n            WidgetService.deleteWidget(wid)\r\n                .then(status =>\r\n                          dispatcher({\r\n                                         type: \"DELETE_WIDGET\",\r\n                                         widgetId: wid\r\n                                     })),\r\n        findWidgetsForTopic: (tid) =>\r\n            WidgetService.findWidgetsForTopic(tid)\r\n                .then(actualWidgetsFromServer =>\r\n                          dispatcher({\r\n                                         type: \"FIND_WIDGETS_FOR_TOPIC\",\r\n                                         widgetsFromServer: actualWidgetsFromServer\r\n                                     })),\r\n\r\n        updateWidget: (wid, widget) =>\r\n            WidgetService.updateWidget(wid, widget)\r\n                .then(status =>\r\n                          dispatcher({\r\n                                         type: \"UPDATE_WIDGET\",\r\n                                         updatedWidget: widget\r\n                                     }))\r\n    }\r\n};\r\n\r\nconst WidgetListContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(WidgetListComponent);\r\n\r\nexport default WidgetListContainer\r\nexport const ewq = 1;\r\nexport const rew = 2;\r\nexport const tre = 3;","import React from \"react\";\r\nimport LessonsTabsContainer from \"../container/LessonsTabsContainer\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ModuleListContainer from \"../container/ModuleListContainer\"\r\nimport TopicPillContainer from \"../container/TopicPillContainer\";\r\nimport WidgetListComponent from \"./WidgetListComponent\";\r\nimport WidgetListContainer from \"../container/WidgetListContainer\";\r\n\r\n// stateless component\r\nconst CourseEditorComponent = ({match}) => {\r\n    return(\r\n        <div>\r\n            {match.params.courseID}\r\n            <Link to=\"/table/courses\">\r\n                Back\r\n            </Link>\r\n            <h2>Course Editor</h2>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <ModuleListContainer {...match}/>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <LessonsTabsContainer {...match}/>\r\n                    <TopicPillContainer {...match}/>\r\n                    <WidgetListContainer {...match}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseEditorComponent\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst HomeComponent = () =>\r\n    <div>\r\n        <h2>Home</h2>\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/editor'>\r\n                Course Editor\r\n            </Link>\r\n            <Link className=\"list-group-item\" to='/table/courses'>\r\n                Course List\r\n            </Link>\r\n        </div>\r\n    </div>\r\n\r\nexport default HomeComponent","import React from \"react\";\r\nimport CourseManagerContainer from \"../container/CourseManagerContainer\";\r\nimport CourseEditorComponent from \"./CourseEditorComponent\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport HomeComponent from \"./HomeComponent\";\r\n\r\nclass WhiteBoard extends React.Component {\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Route\r\n                        path='/'\r\n                        exact={true}\r\n                        component={HomeComponent}/>\r\n                    <Route\r\n                        path='/:layout/courses'\r\n                        exact={true}\r\n                        component={CourseManagerContainer}/>\r\n                    <Route\r\n                        path='/editor'\r\n                        exact={true}\r\n                        component={CourseEditorComponent}/>\r\n\r\n                    <Route\r\n                        path={['/editor/:courseId', '/editor/:courseId/modules/:moduleId',\r\n                               '/editor/:courseId/modules/:moduleId/lessons/:lessonId',\r\n                               '/editor/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId']}\r\n                        exact={true}\r\n                        component={CourseEditorComponent}/>\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WhiteBoard","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport WhiteBoard from \"./components/WhiteBoard\";\n\nfunction App() {\n  return (\n      <div className=\"container\">\n        <WhiteBoard/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  newLessonTitle: 'Some Lesson',\n  lessons: []\n}\n\nconst lessonReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case \"DELETE_LESSON\":\n      return {\n        ...state,\n        lessons: state.lessons.filter(lesson => lesson._id !== action.lessons)\n      }\n    case \"FIND_LESSONS_FOR_MODULE\":\n      return {\n        ...state,\n        lessons: action.lessons\n      }\n    case \"CREATE_LESSON\":\n      return {\n        ...state,\n        lessons: [...state.lessons, action.lessons]\n      }\n    case \"UPDATE_LESSON\":\n      return {\n        ...state,\n        lessons: state.lessons.map(\n            lesson => lesson._id === action.updateLesson._id ?\n                      action.updateLesson: lesson )\n      }\n    default:\n      return state\n  }\n}\n\nexport default lessonReducer\n","const initialState = {\r\n    newTopicTitle: 'Some Topic',\r\n    topics: []\r\n}\r\n\r\nconst topicReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: state.topics.map(\r\n                    topic => topic.id === action.updateTopic.id ?\r\n                             action.updateTopic: topic )\r\n            }\r\n        case \"FIND_TOPICS_FOR_LESSON\":\r\n            return {\r\n                ...state,\r\n                topics: action.topics\r\n            }\r\n        case \"CREATE_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: [...state.topics, action.topics]\r\n            }\r\n        case \"DELETE_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: state.topics.filter(topic => topic.id !== action.topics)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topicReducer","const initialState = {\n  widgets: []\n}\n\nconst widgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_WIDGET\":\n      return {\n        ...state,\n        widgets: state.widgets.map(widget => widget.id === action.updatedWidget.id ? action.updatedWidget : widget)\n                 //state.widgets.map(widget => widget.id === action.wid ? action.widget : widget)\n      }\n    case \"CREATE_WIDGET\":\n      return {\n        ...state,\n          widgets: [...state.widgets, action.widget]\n      }\n    case \"FIND_WIDGETS_FOR_TOPIC\":\n      return {\n        ...state,\n        widgets: action.widgetsFromServer\n      }\n    case \"DELETE_WIDGET\":\n      return {\n        ...state,\n        widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\n      }\n    default:\n      return state\n  }\n}\n\nexport default widgetReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider, connect} from \"react-redux\"\nimport moduleReducer from './reducers/moduleReducer';\nimport lessonReducer from \"./reducers/lessonReducer\";\nimport topicReducer from \"./reducers/topicReducer\";\nimport widgetReducer from \"./reducers/widgetReducer\";\n\n// const store = createStore(counterReducer)\nconst reducers = combineReducers({moduleReducer, lessonReducer,\n                                     topicReducer, widgetReducer})\n\nconst store = createStore(reducers)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}